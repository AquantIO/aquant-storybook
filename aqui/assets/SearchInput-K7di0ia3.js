import{j as d}from"./jsx-runtime-B3uN8q26.js";import{r as c}from"./iframe-DQOe9z8z.js";import{M as m}from"./MagnifyingGlassIcon-DtpVqX6w.js";import{T as f,E as h,c as g}from"./TextInput-491lSm70.js";const n=c.forwardRef(({onEnterKeyDown:t,placeholder:r="Search",withClearButton:a=!0,LeftIcon:o=m,filterNewLine:i=!0,onKeyDown:p,...s},u)=>{const l=e=>{e.keyCode===h&&t?.(e),p?.(e)};return d.jsx(f,{...s,ref:u,onKeyDown:l,placeholder:r,withClearButton:a,filterNewLine:i,LeftIcon:o})}),y={...g};n.propTypes=y;n.__docgenInfo={description:"",methods:[],displayName:"SearchInput",props:{placeholder:{defaultValue:{value:"'Search'",computed:!1},description:"@prop {string} placeholder",type:{name:"string"},required:!1},withClearButton:{defaultValue:{value:"true",computed:!1},description:"@prop {string} withClearButton",type:{name:"bool"},required:!1},LeftIcon:{defaultValue:{value:`forwardRef(({ ...rest }, ref) => (
    <SvgIcon ref={ref} {...rest}>
        <path
            fillRule="evenodd"
            d="M10.5 5.5C7.73858 5.5 5.5 7.73858 5.5 10.5C5.5 13.2614 7.73858 15.5 10.5 15.5C13.2614 15.5 15.5 13.2614 15.5 10.5C15.5 7.73858 13.2614 5.5 10.5 5.5ZM4.5 10.5C4.5 7.18629 7.18629 4.5 10.5 4.5C13.8137 4.5 16.5 7.18629 16.5 10.5C16.5 13.8137 13.8137 16.5 10.5 16.5C7.18629 16.5 4.5 13.8137 4.5 10.5Z"
            className="aquiIcon__path"
        />
        <path
            fillRule="evenodd"
            d="M14.6464 14.6464C14.8417 14.4512 15.1583 14.4512 15.3536 14.6464L19.3536 18.6464C19.5488 18.8417 19.5488 19.1583 19.3536 19.3536C19.1583 19.5488 18.8417 19.5488 18.6464 19.3536L14.6464 15.3536C14.4512 15.1583 14.4512 14.8417 14.6464 14.6464Z"
            className="aquiIcon__path"
        />
    </SvgIcon>
))`,computed:!0},description:`@prop {Component|Jsx} LeftIcon will be placed inside the text input to the left
@note this prop overrides RightIcon`,type:{name:"union",value:[{name:"func"},{name:"string"},{name:"node"},{name:"element"},{name:"shape",value:{render:{name:"func",required:!0}}}]},required:!1},filterNewLine:{defaultValue:{value:"true",computed:!1},description:"@prop {bool} filterNewLine",type:{name:"bool"},required:!1},value:{description:"@prop {string} value",type:{name:"string"},required:!1},textInputRef:{description:`@prop {React.RefObject} textInputRef
this ref will be passed onto the native text input element inside the component`,type:{name:"union",value:[{name:"func"},{name:"shape",value:{current:{name:"instanceOf",value:"Element",required:!1}}}]},required:!1},containerRef:{description:`@prop {React.RefObject} containerRef
this ref will be passed onto the outer container ref`,type:{name:"union",value:[{name:"func"},{name:"shape",value:{current:{name:"instanceOf",value:"Element",required:!1}}}]},required:!1},setValue:{description:"@prop {func} setValue setState function, if not provided an internal state will be used",type:{name:"func"},required:!1},disabled:{description:"@prop {bool} disabled",type:{name:"bool"},required:!1},invalid:{description:"@prop {bool} invalid colors the border red",type:{name:"bool"},required:!1},bold:{description:"@prop {bool} bold makes the text bold",type:{name:"bool"},required:!1},className:{description:`@prop {string} className
@note className is placed on outer container
inner global classes: ['aquiTextInput', 'aquiTextInput__leftIcon', 'aquiTextInput__rightIcon', 'aquiTextInput__inputFrame', 'aquiTextInput__input', 'aquiTextInput__closeIcon', 'aquiTextInput__validationErrorMessage']`,type:{name:"string"},required:!1},dark:{description:"@prop {bool} dark use a dark theme",type:{name:"bool"},required:!1},onClick:{description:`@prop {func} onClick
called with (event)`,type:{name:"func"},required:!1},onChange:{description:`@prop {func} onChange
called with (new value, event)`,type:{name:"func"},required:!1},onKeyDown:{description:`@prop {func} onKeyDown
called with (event)`,type:{name:"func"},required:!1},onFocus:{description:`@prop {func} onFocus
called with (event)`,type:{name:"func"},required:!1},onBlur:{description:`@prop {func} onBlur
called with (event)`,type:{name:"func"},required:!1},autoFocus:{description:`@prop {bool|number} autoFocus
@note you can you a positive number and increment it`,type:{name:"union",value:[{name:"bool"},{name:"number"}]},required:!1},inputMaxLength:{description:"@prop {number} inputMaxLength",type:{name:"number"},required:!1},selectOnFocus:{description:"@prop {bool} selectOnFocus selects the content of the text input on focus event",type:{name:"bool"},required:!1},tabIndex:{description:"@prop {number} tabIndex",type:{name:"number"},required:!1},filterChars:{description:`@prop {str|RegExp} filterChars
chars to filter, pass a string, a regex, or an array of regexs to use sequentialy`,type:{name:"union",value:[{name:"string"},{name:"instanceOf",value:"RegExp"},{name:"arrayOf",value:{name:"instanceOf",value:"RegExp"}}]},required:!1},growWithText:{description:"@prop {bool} growWithText defaults to true",type:{name:"bool"},required:!1},onClearButtonClick:{description:`@prop {func} onClearButtonClick
called with (event)`,type:{name:"func"},required:!1},RightIcon:{description:`@prop {Component|Jsx} RightIcon will be placed inside the text input to the right
@note this prop is ignored when withClearButton=true`,type:{name:"union",value:[{name:"func"},{name:"string"},{name:"node"},{name:"element"},{name:"shape",value:{render:{name:"func",required:!0}}}]},required:!1},dataId:{description:`@prop {string} dataId
data identifier, a change in this prop will reset the component's inner state`,type:{name:"string"},required:!1},dataTestId:{description:"@prop {string} value",type:{name:"string"},required:!1},Button:{description:"@prop {Component|Jsx} Button",type:{name:"union",value:[{name:"func"},{name:"string"},{name:"node"},{name:"element"},{name:"shape",value:{render:{name:"func",required:!0}}}]},required:!1},Tags:{description:`@prop {[]} Tags an array of Tag elements,
@note this feature is not designed to work in conjunction with growWithText`,type:{name:"array"},required:!1},maxTagsLines:{description:"@prop {number} maxTagsLines the maximum number of lines the text input can grow to when using Tags",type:{name:"number"},required:!1},tagLabel:{description:"@prop {string} tagLabel the label for items in the hidden tags menu title",type:{name:"string"},required:!1}}};export{n as S};
