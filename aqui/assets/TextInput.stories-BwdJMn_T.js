import{j as e}from"./jsx-runtime-B-bwlRv9.js";import"./iframe-DvXtawEz.js";import{P as g,R as f}from"./NotAllowedIcon-BNJi6J9H.js";import"./MagnifyingGlassIcon-TFBIoPSQ.js";import"./ChevronIcon-BBTlAHGR.js";import"./CrossMarkIcon-RjufgaMX.js";import"./SvgIcon-DIrvwly8.js";import{N as T}from"./NlpTemplate-cXuTvVok.js";import{T as t}from"./Tag-Do1okORf.js";import{T as x}from"./TextInput-y4D02wla.js";import"./preload-helper-PPVm8Dsz.js";import"./componentUtils-uB8ei2M8.js";import"./proptypes-vSApzSxI.js";import"./TransitionGroupContext-B5V9dr0P.js";import"./Typography-6hT6pf5K.js";import"./misc-B0FWEJCq.js";import"./CharCounter-IB8XYfND.js";import"./IconFlip-LdrcZNSb.js";import"./Popover-C_gnkvBW.js";import"./Grow-B6bkkwUW.js";import"./Portal-CpS6amfy.js";import"./index-CbJL8sH5.js";import"./index-sFwKTfjh.js";import"./Modal-gN03aHMN.js";import"./MenuItem-DTEY3Zw9.js";import"./MenuTitle-B9G0MJSo.js";const G={title:"TextInput",component:x,argTypes:{onClearButtonClick:{action:"clicked"}}},r=T(x),h=T(x,!0),o=r.bind({});o.args={};const a=r.bind({});a.args={filterNewLine:!0,LeftIcon:e.jsx(g,{})};const s=r.bind({});s.args={filterNewLine:!0,Tags:[e.jsx(t,{text:"Tag1"},1),e.jsx(t,{text:"Tag1"},2),e.jsx(t,{text:"2nd Tag"},3),e.jsx(t,{text:"Tag #3"},4),e.jsx(t,{text:"4"},5),e.jsx(t,{text:"anotherTag"},6),e.jsx(t,{text:"and"},7),e.jsx(t,{text:"another"},8),e.jsx(t,{text:"tag"},9)],LeftIcon:e.jsx(g,{}),withClearButton:!0,RightIcon:f};const i=h.bind({});i.args={dark:!0,value:"Let me live my life",withClearButton:!0};const n=h.bind({});n.args={dark:!0,value:"on focus ill be selected",selectOnFocus:!0};const p=h.bind({});p.args={dark:!0,value:"a dollar sign is forbidden here",filterChars:"$"};const c=h.bind({});c.args={dark:!0,value:"you cant type the F word ",filterChars:/fuck/gi};const u=h.bind({});u.args={dark:!0,style:{width:300},Tags:[e.jsx(t,{text:"Tag1"},1),e.jsx(t,{text:"Tag1"},2),e.jsx(t,{text:"2nd Tag"},3),e.jsx(t,{text:"Tag #3"},4),e.jsx(t,{text:"4"},5),e.jsx(t,{text:"anotherTag"},6),e.jsx(t,{text:"and"},7),e.jsx(t,{text:"another"},8),e.jsx(t,{text:"tag"},9)],value:"",growWithText:!0};const l=r.bind({});l.args={style:{width:300},placeholder:"Type something...",inputMaxLength:100,charCounterPosition:"bottom",growWithText:!0,value:"This text input shows the character counter at the bottom. The text will grow as you type more content, making it perfect for longer inputs. You can continue typing and the input field will automatically expand to accommodate your text."};const m=r.bind({});m.args={style:{width:300},placeholder:"Type something...",inputMaxLength:150,charCounterPosition:"right",growWithText:!0,value:"This text input shows the character counter on the right side. As you type more text, the input field will automatically grow vertically to fit your content. This is especially useful for longer form inputs where you need to see more text at once without scrolling."};const d=r.bind({});d.args={style:{width:300},placeholder:"Type something...",inputMaxLength:200,charCounterPosition:"inside",withClearButton:!0,value:"This text input shows the character counter inside the input field"};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:"NlpTemplate(TextInput)",...o.parameters?.docs?.source}}};a.parameters={...a.parameters,docs:{...a.parameters?.docs,source:{originalSource:"NlpTemplate(TextInput)",...a.parameters?.docs?.source}}};s.parameters={...s.parameters,docs:{...s.parameters?.docs,source:{originalSource:"NlpTemplate(TextInput)",...s.parameters?.docs?.source}}};i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:"NlpTemplate(TextInput, true)",...i.parameters?.docs?.source}}};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:"NlpTemplate(TextInput, true)",...n.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:"NlpTemplate(TextInput, true)",...p.parameters?.docs?.source}}};c.parameters={...c.parameters,docs:{...c.parameters?.docs,source:{originalSource:"NlpTemplate(TextInput, true)",...c.parameters?.docs?.source}}};u.parameters={...u.parameters,docs:{...u.parameters?.docs,source:{originalSource:"NlpTemplate(TextInput, true)",...u.parameters?.docs?.source}}};l.parameters={...l.parameters,docs:{...l.parameters?.docs,source:{originalSource:"NlpTemplate(TextInput)",...l.parameters?.docs?.source}}};m.parameters={...m.parameters,docs:{...m.parameters?.docs,source:{originalSource:"NlpTemplate(TextInput)",...m.parameters?.docs?.source}}};d.parameters={...d.parameters,docs:{...d.parameters?.docs,source:{originalSource:"NlpTemplate(TextInput)",...d.parameters?.docs?.source}}};const H=["Default","WithLeftIconAndNewLineDisabled","WithTwoIconsAndTags","WithClearButton","SelectOnFocus","FilterChars","FilterWord","WithTags","WithCharCounterBottom","WithCharCounterRight","WithCharCounterInside"];export{o as Default,p as FilterChars,c as FilterWord,n as SelectOnFocus,l as WithCharCounterBottom,d as WithCharCounterInside,m as WithCharCounterRight,i as WithClearButton,a as WithLeftIconAndNewLineDisabled,u as WithTags,s as WithTwoIconsAndTags,H as __namedExportsOrder,G as default};
