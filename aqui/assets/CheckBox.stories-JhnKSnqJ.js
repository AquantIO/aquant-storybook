import{N}from"./NlpTemplate-cXuTvVok.js";import{j as s}from"./jsx-runtime-B-bwlRv9.js";import{r as g}from"./iframe-DvXtawEz.js";import{u as w,c as L,P as e}from"./componentUtils-uB8ei2M8.js";import{S as v}from"./SvgIcon-DIrvwly8.js";import{i as R}from"./proptypes-vSApzSxI.js";import"./TransitionGroupContext-B5V9dr0P.js";import"./preload-helper-PPVm8Dsz.js";const i={LIGHTGREY:"lightgrey",DARKGREY:"darkgrey",BLUE:"blue"},S="_container_1igrh_1",j="_box_1igrh_6",G="_box__path_1igrh_59",A="_label_1igrh_78",D={container:S,box:j,"--disabled":"_--disabled_1igrh_16","--darkgrey":"_--darkgrey_1igrh_19","--lightgrey":"_--lightgrey_1igrh_25","--checked":"_--checked_1igrh_35","--intermediate":"_--intermediate_1igrh_35",box__path:G,label:A},n=L.bind(D),P={[i.LIGHTGREY]:"--lightgrey",[i.DARKGREY]:"--darkgrey",[i.BLUE]:"--blue"},O="--blue",l=g.forwardRef(({className:c,controlled:d,checked:o,setChecked:f,intermediate:u,disabled:p,onChange:_,onClick:k,label:y,dataTestId:x,dataId:C,color:B=i.BLUE,...T},q)=>{const m=P[B]||O,[r,h]=w(o,f,!1),E=({nativeEvent:I})=>{p||(k?.(I),d||(_?.(!r),h(!r)))};return g.useEffect(()=>{h(o)},[o,C]),s.jsxs("div",{ref:q,...T,"data-testid":x,"data-checked":r,"data-disabled":p,className:n("container",c),children:[s.jsx(v,{viewBox:"6 6 12 12",disableCurrentColor:!0,className:n("box",m,{"--checked":r&&!u,"--intermediate":r&&u,"--disabled":p},"aquiCheckBox__box"),onClick:E,children:s.jsx("path",{className:n("box__path",m),strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:1})}),s.jsx("div",{className:n("label","aquiCheckBox__label"),"data-testid":"checkBoxLabel",children:y})]})}),U={checked:e.bool,setChecked:e.func,controlled:e.bool,intermediate:e.bool,disabled:e.bool,className:e.string,onChange:e.func,onClick:e.func,label:e.oneOfType([e.string,R]),dataTestId:e.string,dataId:e.string,color:(c,d)=>{const o=c[d];if(o&&!["lightgrey","darkgrey","blue"].includes(o))return new Error("Invalid prop 'color' supplied to Button, expected one of: 'lightgrey'|'darkgrey'|'blue'")}};l.propTypes=U;l.__docgenInfo={description:"",methods:[],displayName:"CheckBox",props:{color:{defaultValue:{value:"'blue'",computed:!1},description:`@prop {'lightgrey' | 'darkgrey' | 'blue'} color

defaults to 'blue'`,type:{name:"custom",raw:`(props, propName) => {
  const color = props[propName];
  if (color && !["lightgrey", "darkgrey", "blue"].includes(color)) {
    return new Error(
      \`Invalid prop 'color' supplied to Button, expected one of: 'lightgrey'|'darkgrey'|'blue'\`
    );
  }
}`},required:!1},checked:{description:"@prop {bool} checked",type:{name:"bool"},required:!1},setChecked:{description:"@prop {func} setChecked state setter",type:{name:"func"},required:!1},controlled:{description:`@prop {bool}
A controlled component will not manage its state and will only be used for display
defaults to false`,type:{name:"bool"},required:!1},intermediate:{description:"@prop {bool} intermediate shows horizontal line instead of a checkmark",type:{name:"bool"},required:!1},disabled:{description:"@prop {bool} disabled",type:{name:"bool"},required:!1},className:{description:`@prop {string} className
@note className is placed on outer container
inner global classes: ['aquiCheckBox__box', 'aquiCheckBox__label']`,type:{name:"string"},required:!1},onChange:{description:`@prop {func} onChange
called with (newVal)`,type:{name:"func"},required:!1},onClick:{description:`@prop {func} onClick on box click,
called with (event)`,type:{name:"func"},required:!1},label:{description:"@prop {string} label",type:{name:"union",value:[{name:"string"},{name:"custom",raw:"isValidElementPropType"}]},required:!1},dataTestId:{description:"@prop {string} dataTestId",type:{name:"string"},required:!1},dataId:{description:`@prop {string} dataId
data identifier, a change in this prop will reset the component's inner state`,type:{name:"string"},required:!1}}};const M={title:"CheckBox",component:l,argTypes:{color:{options:["lightgrey","darkgrey","blue"],control:{type:"radio"}}}},b=N(l),t=b.bind({});t.args={};const a=b.bind({});a.args={checked:!0,intermediate:!0,label:"Some of my content is selected"};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:"NlpTemplate(CheckBox)",...t.parameters?.docs?.source}}};a.parameters={...a.parameters,docs:{...a.parameters?.docs,source:{originalSource:"NlpTemplate(CheckBox)",...a.parameters?.docs?.source}}};const Q=["Default","IntermediateWithLabel"];export{t as Default,a as IntermediateWithLabel,Q as __namedExportsOrder,M as default};
