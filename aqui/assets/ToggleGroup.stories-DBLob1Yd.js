import{j as E}from"./jsx-runtime-B3uN8q26.js";import{r as _}from"./iframe-DQOe9z8z.js";import{c as $,j as H,P as e}from"./componentUtils-Cx--_a1r.js";import{i as W}from"./proptypes-Dp3Gscoq.js";import{C as K}from"./CrossMarkIcon-CySzJ8va.js";import{T as Q}from"./Tooltip-B1m6Bslk.js";import{N as X}from"./NlpTemplate-CudevEnL.js";import{B as ee}from"./NotAllowedIcon-Cctd9Iaa.js";import"./MagnifyingGlassIcon-DtpVqX6w.js";import"./ChevronIcon-CDzsw7LC.js";import"./SvgIcon-ClEstAvg.js";import"./preload-helper-PPVm8Dsz.js";import"./TransitionGroupContext-Mu39Ki5b.js";import"./Grow-C48QWCZw.js";import"./Portal-YhJ6ZjP_.js";import"./index-CAbqTsLW.js";import"./index-RYsR23KM.js";import"./useId-lraG_1SO.js";const oe=(n,p,s=null,u={})=>{const{multi:c=!1,allowEmptySelection:m=!0}=u,[t,g]=_.useState(n||(c?new Set:null)),d=l=>{p(l,s),g(l)};_.useEffect(()=>{n!==void 0&&n!==t&&g(n)},[n,s]);const T=(l,o)=>{c?f(l,o):v(l,o)},v=(l,o)=>{!l&&t===o?d(null):l&&d(o)},f=(l,o)=>{if(!t.has(o)&&l){const i=new Set(t);i.add(o),d(i)}else if(t.has(o)&&!l){const i=new Set(t);i.delete(o),d(i)}},y=l=>t===l||t?.has?.(l),w=m||t?.size>1;return[T,y,w]},te={"toggle-item":"_toggle-item_nwjvd_1","--dark":"_--dark_nwjvd_14","--selected":"_--selected_nwjvd_18","--disabled":"_--disabled_nwjvd_26","--unselect-indication-enabled":"_--unselect-indication-enabled_nwjvd_39","toggle-item__text":"_toggle-item__text_nwjvd_39","toggle-item__icon":"_toggle-item__icon_nwjvd_43"},le={"toggle-item":"_toggle-item_11kga_1","--dark":"_--dark_11kga_17","--selected":"_--selected_11kga_20","--disabled":"_--disabled_11kga_24","--unselect-indication-enabled":"_--unselect-indication-enabled_11kga_40","toggle-item__text":"_toggle-item__text_11kga_40","toggle-item__icon":"_toggle-item__icon_11kga_44"},A=_.forwardRef(({children:n,onChange:p,isSelected:s,dark:u,disabled:c=!1,canUnselect:m=!0,showUnselectIndication:t=!1,UnselectIconComponent:g=K,dataTestId:d="",variant:T="default",className:v,controlled:f=!1,onClick:y=()=>null,...w},l)=>{const[o,i]=_.useState(s);_.useEffect(()=>{i(s)},[s]);const O=D=>{c||o&&!m||(y(D),f||(i(!o),p(!o,n)))},B=o&&t&&m;let b;switch(T){case"gradient":b=le;break;default:b=te;break}const S=$.bind(b);return E.jsxs("div",{ref:l,...w,"data-testid":`${d}TextToggle`,onClick:O,"data-disabled":c,"data-selected":o,className:S(v,"toggle-item",{"--selected":o,"--disabled":c,"--dark":u,"--unselect-indication-enabled":B}),children:[E.jsx("span",{className:S("toggle-item__text"),children:n}),H(g,{className:S("toggle-item__icon")})]})}),z={onChange:e.func,canUnselect:e.bool,showUnselectIndication:e.bool,UnselectIconComponent:W,disabled:e.bool,isSelected:e.bool,dataTestId:e.string,variant:e.oneOf(["default","blue","gradient"]),className:e.string,controlled:e.bool,dark:e.bool};A.propTypes=z;A.__docgenInfo={description:"",methods:[],displayName:"TextToggle",props:{disabled:{defaultValue:{value:"false",computed:!1},description:`@prop {bool}
defaults to false`,type:{name:"bool"},required:!1},canUnselect:{defaultValue:{value:"true",computed:!1},description:`@prop {bool}

defaults to true`,type:{name:"bool"},required:!1},showUnselectIndication:{defaultValue:{value:"false",computed:!1},description:`@prop {bool}
show Unselect Icon when hovering over selected option
defaults to false`,type:{name:"bool"},required:!1},UnselectIconComponent:{defaultValue:{value:`forwardRef(({ ...rest }, ref) => (
  <SvgIcon ref={ref} {...rest}>
    <path
      fillRule="evenodd"

      d="M8.11094 7.40383C7.91568 7.20857 7.59909 7.20857 7.40383 7.40383C7.20857 7.59909 7.20857 7.91568 7.40383 8.11094L11.2929 12L7.40383 15.8891C7.20857 16.0844 7.20857 16.401 7.40383 16.5962C7.59909 16.7915 7.91568 16.7915 8.11094 16.5962L12 12.7071L15.8891 16.5962C16.0844 16.7915 16.401 16.7915 16.5962 16.5962C16.7915 16.401 16.7915 16.0844 16.5962 15.8891L12.7071 12L16.5962 8.11094C16.7915 7.91568 16.7915 7.59909 16.5962 7.40383C16.401 7.20857 16.0844 7.20857 15.8891 7.40383L12 11.2929L8.11094 7.40383Z"

    />
  </SvgIcon>
))`,computed:!0},description:`@prop {func}
defaults to CrossMarkIcon`,type:{name:"union",value:[{name:"func"},{name:"string"},{name:"node"},{name:"element"},{name:"shape",value:{render:{name:"func",required:!0}}}]},required:!1},dataTestId:{defaultValue:{value:'""',computed:!1},description:"@prop {string}",type:{name:"string"},required:!1},variant:{defaultValue:{value:'"default"',computed:!1},description:`@prop {"default"| "gradient"}
determines the color of the component
defaults to 'default'`,type:{name:"enum",value:[{value:'"default"',computed:!1},{value:'"blue"',computed:!1},{value:'"gradient"',computed:!1}]},required:!1},controlled:{defaultValue:{value:"false",computed:!1},description:`@prop {bool}
A controlled component will not manage its state and will only be used for display
defaults to false`,type:{name:"bool"},required:!1},onClick:{defaultValue:{value:"() => null",computed:!1},required:!1},onChange:{description:`@prop {func}
called with (selected, children)`,type:{name:"func"},required:!1},isSelected:{description:"@prop {bool}",type:{name:"bool"},required:!1},className:{description:"@prop {string}",type:{name:"string"},required:!1},dark:{description:"@prop {bool} dark",type:{name:"bool"},required:!1}}};const P={PURPLE:"purple",GRADIENT:"gradient",BLUE:"blue"},ae={"group-select-container":"_group-select-container_tf9ab_1","--dark":"_--dark_tf9ab_9","group-select-container--disabled":"_group-select-container--disabled_tf9ab_15"},ne=$.bind(ae),re={[P.PURPLE]:"--purple",[P.GRADIENT]:"--gradient",[P.BLUE]:"--blue"},se="--purple",Y=_.forwardRef(({options:n=[],onChange:p=()=>null,selection:s,dark:u,multi:c=!1,allowEmptySelection:m=!0,disabled:t=!1,showUnselectIndication:g=!1,UnselectIconComponent:d,dataTestId:T,dataId:v,toggleVariant:f,controlled:y=!1,onClick:w=()=>null,toggleTooltips:l={}},o)=>{const i=re[f]||se,[O,B,b]=oe(s,p,v,{multi:c,allowEmptySelection:m}),S=a=>typeof t=="object"?t[a]:t,D=a=>l?.[a]||"",F=()=>typeof t=="object"?n.every(a=>t[a]):t,J=(a,L)=>w(a,L,{canUnselect:b,selected:B(a)});return E.jsx("div",{ref:o,className:ne("group-select-container",i,{"group-select-container--disabled":F(),"--dark":u}),children:n.map((a,L)=>E.jsx(Q,{title:D(a),children:E.jsx(A,{dark:u,dataTestId:`${T}GroupSelectToggle${L}`,disabled:S(a),showUnselectIndication:g,onChange:(M,Z)=>O(M,Z),UnselectIconComponent:d,canUnselect:b,isSelected:B(a),variant:f,controlled:y,onClick:M=>J(a,M),children:a})},`${L}_option`))})}),ie={options:e.array.isRequired,onChange:e.func,onClick:e.func,selection:e.oneOfType([e.string,e.instanceOf(Set)]),multi:e.bool,allowEmptySelection:e.bool,disabled:e.oneOfType([e.bool,e.object]),showUnselectIndication:e.bool,UnselectIconComponent:W,dataTestId:e.string,dataId:e.any,toggleVariant:z.variant,toggleTooltips:e.object,controlled:e.bool,dark:e.bool};Y.propTypes=ie;Y.__docgenInfo={description:"",methods:[],displayName:"ToggleGroup",props:{options:{defaultValue:{value:"[]",computed:!1},description:"@prop {array} options",type:{name:"array"},required:!1},onChange:{defaultValue:{value:"() => null",computed:!1},description:`@prop {func} onChange
called with (selection, dataId)`,type:{name:"func"},required:!1},multi:{defaultValue:{value:"false",computed:!1},description:`@prop {bool} multi
enable to choose more than one option if set to true
defaults to false`,type:{name:"bool"},required:!1},allowEmptySelection:{defaultValue:{value:"true",computed:!1},description:`@prop {bool} allowEmptySelection
if false, at least one option should be selected
defaults to true`,type:{name:"bool"},required:!1},disabled:{defaultValue:{value:"false",computed:!1},description:`@prop {(bool | object)} disabled
defaults to false`,type:{name:"union",value:[{name:"bool"},{name:"object"}]},required:!1},showUnselectIndication:{defaultValue:{value:"false",computed:!1},description:`@prop {bool} showUnselectIndication
show Unselect Icon when hovering over selected option
defaults to false`,type:{name:"bool"},required:!1},controlled:{defaultValue:{value:"false",computed:!1},description:`@prop {bool}
A controlled component will not manage its state and will only be used for display
defaults to false`,type:{name:"bool"},required:!1},onClick:{defaultValue:{value:"() => null",computed:!1},description:`@prop {func} onClick
called with (option, event, { canUnselect, selected })`,type:{name:"func"},required:!1},toggleTooltips:{defaultValue:{value:"{}",computed:!1},description:`@prop {object} toggleTooltips
show tooltip on hover
input example: { option1: 'text1', option2: 'text2' }`,type:{name:"object"},required:!1},selection:{description:`@prop {set} selection
determines which option / optionss should already be selected`,type:{name:"union",value:[{name:"string"},{name:"instanceOf",value:"Set"}]},required:!1},UnselectIconComponent:{description:`@prop {func} UnselectIconComponent
defaults to CrossMarkIcon`,type:{name:"union",value:[{name:"func"},{name:"string"},{name:"node"},{name:"element"},{name:"shape",value:{render:{name:"func",required:!0}}}]},required:!1},dataTestId:{description:"@prop {string} dataTestId",type:{name:"string"},required:!1},dataId:{description:"@prop {any} dataId",type:{name:"any"},required:!1},toggleVariant:{description:`@prop {string} toggleVariant
determines the color of the component
defaults to 'default'`,type:{name:"enum",value:[{value:'"default"',computed:!1},{value:'"blue"',computed:!1},{value:'"gradient"',computed:!1}]},required:!1},dark:{description:"@prop {bool} dark",type:{name:"bool"},required:!1}}};const Ge={title:"ToggleGroup",component:Y,argTypes:{}},r=X(Y),h=r.bind({});h.args={options:["Blue","Red"]};const I=r.bind({});I.args={options:["Blue","Red","Green","Yellow"],multi:!0};const C=r.bind({});C.args={options:["Blue","Red","Green","Yellow"],selection:new Set(["Blue","Yellow"]),multi:!0};const k=r.bind({});k.args={options:["Blue","Red","Green","Yellow"],multi:!0,allowEmptySelection:!1,showUnselectIndication:!0};const G=r.bind({});G.args={options:["Blue","Red","Green","Yellow"],multi:!0,disabled:!0};const U=r.bind({});U.args={options:["Blue","Red","Green","Yellow"],multi:!0,disabled:{Red:!0}};const q=r.bind({});q.args={options:["Blue","Red","Green","Yellow"],multi:!0,showUnselectIndication:!0};const j=r.bind({});j.args={options:["Blue","Red","Green","Yellow"],multi:!0,showUnselectIndication:!0,UnselectIconComponent:ee};const N=r.bind({});N.args={options:["Blue","Red","Green","Yellow"],toggleVariant:"gradient"};const R=r.bind({});R.args={options:["Blue","Red","Green","Yellow"],controlled:!0};const V=r.bind({});V.args={options:["Blue","Red","Green","Yellow"],onClick:(n,p,s)=>{alert("Triggered onClick event, open console log for details"),console.log("%cTriggered onClick event!",`background:linear-gradient(#E66465, #9198E5);
            padding: 1rem;
            color: white;
            border-radius: .5em`),console.log('callback recieves 3 params: option, the event itself and an object with "canUnselect" and "selected" properties'),console.log(`option: ${n}`),console.log("event object:"),console.log(p),console.log(`object: ${JSON.stringify(s,null,2)}`)}};const x=r.bind({});x.args={options:["Blue","Red","Green","Yellow"],toggleTooltips:{Blue:"Blue Tooltip",Red:"Red has different tooltip",Green:"Yellow does not have tooltip"}};h.parameters={...h.parameters,docs:{...h.parameters?.docs,source:{originalSource:"NlpTemplate(ToggleGroup)",...h.parameters?.docs?.source}}};I.parameters={...I.parameters,docs:{...I.parameters?.docs,source:{originalSource:"NlpTemplate(ToggleGroup)",...I.parameters?.docs?.source}}};C.parameters={...C.parameters,docs:{...C.parameters?.docs,source:{originalSource:"NlpTemplate(ToggleGroup)",...C.parameters?.docs?.source}}};k.parameters={...k.parameters,docs:{...k.parameters?.docs,source:{originalSource:"NlpTemplate(ToggleGroup)",...k.parameters?.docs?.source}}};G.parameters={...G.parameters,docs:{...G.parameters?.docs,source:{originalSource:"NlpTemplate(ToggleGroup)",...G.parameters?.docs?.source}}};U.parameters={...U.parameters,docs:{...U.parameters?.docs,source:{originalSource:"NlpTemplate(ToggleGroup)",...U.parameters?.docs?.source}}};q.parameters={...q.parameters,docs:{...q.parameters?.docs,source:{originalSource:"NlpTemplate(ToggleGroup)",...q.parameters?.docs?.source}}};j.parameters={...j.parameters,docs:{...j.parameters?.docs,source:{originalSource:"NlpTemplate(ToggleGroup)",...j.parameters?.docs?.source}}};N.parameters={...N.parameters,docs:{...N.parameters?.docs,source:{originalSource:"NlpTemplate(ToggleGroup)",...N.parameters?.docs?.source}}};R.parameters={...R.parameters,docs:{...R.parameters?.docs,source:{originalSource:"NlpTemplate(ToggleGroup)",...R.parameters?.docs?.source}}};V.parameters={...V.parameters,docs:{...V.parameters?.docs,source:{originalSource:"NlpTemplate(ToggleGroup)",...V.parameters?.docs?.source}}};x.parameters={...x.parameters,docs:{...x.parameters?.docs,source:{originalSource:"NlpTemplate(ToggleGroup)",...x.parameters?.docs?.source}}};const Ue=["Default","MultiSelection","MultipleSelectionWithSelectedItems","EmptySelectionNotAllowed","Disabled","DisableSome","ShowUnselectIndication","UnselectIconComponent","ToggleVariantGradient","Controlled","UsingOnClick","ToggleTooltips"];export{R as Controlled,h as Default,U as DisableSome,G as Disabled,k as EmptySelectionNotAllowed,I as MultiSelection,C as MultipleSelectionWithSelectedItems,q as ShowUnselectIndication,x as ToggleTooltips,N as ToggleVariantGradient,j as UnselectIconComponent,V as UsingOnClick,Ue as __namedExportsOrder,Ge as default};
