import{j as s}from"./jsx-runtime-B-bwlRv9.js";import{r as b}from"./iframe-DvXtawEz.js";import{c as q,P as e}from"./componentUtils-uB8ei2M8.js";import{S as R,a as I}from"./SvgIcon-DIrvwly8.js";import{N}from"./NlpTemplate-cXuTvVok.js";import"./preload-helper-PPVm8Dsz.js";import"./TransitionGroupContext-B5V9dr0P.js";const y="_container_6wu6c_1",w="_ring_6wu6c_6",S="_text_6wu6c_16",j={container:y,ring:w,"ring-track":"_ring-track_6wu6c_12",text:S},u=q.bind(j),k=10,F=0,W=10,p=b.forwardRef(({className:r,progress:g=0,ringWidth:f=3,showPercentageText:x=!1,percentageTextFormatter:h=i=>parseFloat((i??0).toFixed(2))+"%",startAngle:P=0,dataTestId:T,svgIconProps:_,...v},V)=>{const i=Math.min(Math.max(g,0),100),m=Math.min(Math.max(f,F),W),d=k-m/2,c=2*d*Math.PI;return s.jsxs("div",{...v,className:u("container",r||""),"data-testid":T,children:[s.jsxs(R,{..._,children:[s.jsx("circle",{cx:12,cy:12,r:d,className:u("ring-track","aquiProgressRing__ringTrack"),strokeWidth:m}),s.jsx("circle",{strokeDashoffset:c-i*c/100,strokeDasharray:`${c} ${c}`,cx:12,cy:12,r:d,className:u("ring","aquiProgressRing__ring"),strokeWidth:m,style:{transform:`rotate(${P-90}deg)`}})]}),x&&s.jsx("div",{className:u("text","aquiProgressRing__percentageText"),"data-testid":"progressRingText",children:h(i)})]})}),D={className:e.string,progress:e.number,ringWidth:e.number,startAngle:e.number,showPercentageText:e.bool,percentageTextFormatter:e.func,dataTestId:e.string,svgIconProps:e.shape(I)};p.propTypes=D;p.__docgenInfo={description:"",methods:[],displayName:"ProgressRing",props:{progress:{defaultValue:{value:"0",computed:!1},description:"@prop {number} progress a number between 0 and 100",type:{name:"number"},required:!1},ringWidth:{defaultValue:{value:"3",computed:!1},description:`@prop {number} ringWidth the ring's width in px, max is 10
defaults to 3`,type:{name:"number"},required:!1},showPercentageText:{defaultValue:{value:"false",computed:!1},description:"@prop {bool} showPercentageText",type:{name:"bool"},required:!1},percentageTextFormatter:{defaultValue:{value:`(p) =>
parseFloat((p ?? 0).toFixed(2)) + "%"`,computed:!1},description:`@prop {func} percentageTextFormatter formats the percentage text.
receives the progress props as a param and returns a string`,type:{name:"func"},required:!1},startAngle:{defaultValue:{value:"0",computed:!1},description:`@prop {number} startAngle a number between 0 and 360
determines at what angle is the 0%
defaults to 0`,type:{name:"number"},required:!1},className:{description:`@prop {string} className
@note className is placed on outer container
inner global classes: ['aquiProgressRing__ring', 'aquiProgressRing__ringTrack', 'aquiProgressRing__percentageText']`,type:{name:"string"},required:!1},dataTestId:{description:"@prop {string} dataTestId",type:{name:"string"},required:!1},svgIconProps:{description:"@prop {object} svgIconProps a props object to be passed to the SvgIcon component holding the ring",type:{name:"shape",value:{className:{name:"string",required:!1},children:{name:"union",value:[{name:"arrayOf",value:{name:"node"}},{name:"node"}],required:!1},nuance:{name:"enum",value:[{value:'"indication"',computed:!1},{value:'"success"',computed:!1},{value:'"error"',computed:!1}],required:!1},cleanNuance:{name:"enum",value:[{value:'"indication"',computed:!1},{value:'"success"',computed:!1},{value:'"error"',computed:!1}],required:!1},dataTestId:{name:"string",required:!1},width:{name:"number",required:!1},height:{name:"number",required:!1},viewBox:{name:"string",required:!1},size:{name:"enum",value:[{value:'"small"',computed:!1},{value:'"medium"',computed:!1}],required:!1},disableCurrentColor:{name:"bool",required:!1},adjustViewBox:{name:"bool",required:!1}}},required:!1}}};const C={title:"ProgressRing",component:p},l=N(p),a=l.bind({});a.args={};const t=l.bind({});t.args={progress:63,showPercentageText:!0};const M=r=>r<25?"Getting started..":r<50?"Still working":r<75?"Half way there":r<100?"Not much longer":"Done ðŸ¥³",n=l.bind({});n.args={progress:20,showPercentageText:!0,percentageTextFormatter:M};const o=l.bind({});o.args={progress:33,svgIconProps:{nuance:"success"}};a.parameters={...a.parameters,docs:{...a.parameters?.docs,source:{originalSource:"NlpTemplate(ProgressRing)",...a.parameters?.docs?.source}}};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:"NlpTemplate(ProgressRing)",...t.parameters?.docs?.source}}};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:"NlpTemplate(ProgressRing)",...n.parameters?.docs?.source}}};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:"NlpTemplate(ProgressRing)",...o.parameters?.docs?.source}}};const O=["Default","WithPercentageText","PercentageTextFormatting","UsingSvgIconProps"];export{a as Default,n as PercentageTextFormatting,o as UsingSvgIconProps,t as WithPercentageText,O as __namedExportsOrder,C as default};
