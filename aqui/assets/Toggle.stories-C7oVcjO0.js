import{j as C}from"./jsx-runtime-B3uN8q26.js";import{r as i}from"./iframe-DQOe9z8z.js";import{u as q,c as w,P as e}from"./componentUtils-Cx--_a1r.js";import{N as I}from"./NlpTemplate-CudevEnL.js";import"./preload-helper-PPVm8Dsz.js";import"./TransitionGroupContext-Mu39Ki5b.js";const N={switch:"_switch_1024s_1","--disabled":"_--disabled_1024s_10","--checked":"_--checked_1024s_13","--dark":"_--dark_1024s_19"},x=w.bind(N),r=i.forwardRef(({checked:d=!1,setChecked:p,disabled:l,onChange:u,className:m,onClick:f,dataTestId:g,controlled:h=!1,dark:b=!1,dataId:D,...k},T)=>{const[t,n]=q(d,p,!1);i.useEffect(()=>{n(d)},[d]);const y=({nativeEvent:_})=>{l||(f?.(_),h||(n(!t),u?.(!t)))};return C.jsx("div",{ref:T,className:x("switch",m,{"--disabled":l,"--checked":t,"--dark":b}),"data-testid":g,"data-checked":t,"data-disabled":l,onClick:y,...k})}),v={checked:e.bool,setChecked:e.func,disabled:e.bool,dark:e.bool,className:e.string,onChange:e.func,controlled:e.bool,dataTestId:e.string,dataId:e.string,onClick:e.func};r.propTypes=v;r.__docgenInfo={description:"",methods:[],displayName:"Toggle",props:{checked:{defaultValue:{value:"false",computed:!1},description:"@prop {bool} checked",type:{name:"bool"},required:!1},controlled:{defaultValue:{value:"false",computed:!1},description:`@prop {bool}
A controlled component will not manage its state and will only be used for display
defaults to false`,type:{name:"bool"},required:!1},dark:{defaultValue:{value:"false",computed:!1},description:"@prop {bool} dark",type:{name:"bool"},required:!1},setChecked:{description:"@prop {func} setChecked",type:{name:"func"},required:!1},disabled:{description:"@prop {bool} disabled",type:{name:"bool"},required:!1},className:{description:"",type:{name:"string"},required:!1},onChange:{description:`@prop {func} onChange
called with (newVal)`,type:{name:"func"},required:!1},dataTestId:{description:"@prop {string} dataTestId",type:{name:"string"},required:!1},dataId:{description:`@prop {string} dataId
data identifier, a change in this prop will reset the component's inner state`,type:{name:"string"},required:!1},onClick:{description:`@prop {func} onClick on box click,
called with (event)`,type:{name:"func"},required:!1}}};const A={title:"Toggle",component:r},c=I(r),a=c.bind({});a.args={};const s=c.bind({});s.args={checked:!0};const o=c.bind({});o.args={disabled:!0,checked:!1};a.parameters={...a.parameters,docs:{...a.parameters?.docs,source:{originalSource:"NlpTemplate(Toggle)",...a.parameters?.docs?.source}}};s.parameters={...s.parameters,docs:{...s.parameters?.docs,source:{originalSource:"NlpTemplate(Toggle)",...s.parameters?.docs?.source}}};o.parameters={...o.parameters,docs:{...o.parameters?.docs,source:{originalSource:"NlpTemplate(Toggle)",...o.parameters?.docs?.source}}};const O=["Default","Checked","Disabled"];export{s as Checked,a as Default,o as Disabled,O as __namedExportsOrder,A as default};
